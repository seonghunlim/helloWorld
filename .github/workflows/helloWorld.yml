# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: HelloWorld CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
  - cron: "30 1 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: 커밋 메시지 확인
      id: check
      run: echo "result=$(echo '${{ github.event.head_commit.message }}'" >> $GITHUB_OUTPUT
      shell: bash
    - name: 현재 날짜 확인
      id: date-now
      run: echo "date-now=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
  create-tag:
    runs-on: ubuntu-latest
    needs:
      ["build"]
    if: ${{ needs.build.outputs.result != '' }}
    outputs:
      tag-exists: ${{ steps.create-tag.outputs.tag_exists }}
      release-body: ${{ steps.generate-body.outputs.body }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rickstaa/action-create-tag@v1
        id: create-tag
        with:
          tag: RB-${{ needs.build.outputs.date-now }}
          tag_exists_error: true
  create-release:
      runs-on: ubuntu-latest
      needs: ["build", "create-tag"]
      if: ${{ needs.create-tag.outputs.tag-exists == 'false' }}
      steps:
          - uses: actions/checkout@v3
          - name: 태그 메시지 생성
            id: generate-body
            run: |
              EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
              git_logs=$(git log "$(git describe --tags --abbrev=0)"..HEAD --oneline)
              git_logs="${git_logs//$'\n'/$'\n'- }"
              {
                  echo "body<<$EOF"
                  echo "- $git_logs"
                  echo "$EOF"
              } >>"$GITHUB_OUTPUT"
            shell: bash
          - name: release 생성
            uses: ncipollo/release-action@v1
            with:
                tag: ${{ needs.build.outputs.date-now }}
                name: ${{ needs.build.outputs.date-now }}
                body: ${{ steps.generate-body.outputs.release-body }}